services:
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --save 60 1 --loglevel warning
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    profiles:
      - redis 
      - frontend
      - backend
      - all

  api:
    build:
      context: .
      dockerfile: Dockerfile
    working_dir: /workspace
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000
    ports:
      - "8000:8000"
    environment:
      - PYTHONPATH=/workspace
    env_file:
      - .env
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    depends_on:
      - redis
    profiles:
      - backend
      - all

  frontend:
    # platform: linux/amd64
    build:
      context: frontend
      dockerfile: Dockerfile
    env_file:
      - .env
    ports:
      - "80:80"
    restart: unless-stopped
    depends_on:
      - api
    profiles:
      - frontend
      - all

  # gwas_upload_pipeline:
  #   image: mrcieu/genotype-phenotype-map:prod
  #   environment:
  #     - PYTHONPATH=/workspace
  #   env_file:
  #     - .env
  #   restart: unless-stopped
  #   command: ["Rscript", "worker/pipeline_worker.R"]
  #   profile: ["backend", "gwas_upload_pipeline"]

volumes:
  redis_data: 